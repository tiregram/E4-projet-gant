// Copyright 1998-2017 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "GeneratedCppIncludes.h"
#include "E4FI.h"
#include "E4FI.generated.dep.h"
PRAGMA_DISABLE_OPTIMIZATION
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1E4FI() {}
	void AMyScreen::StaticRegisterNativesAMyScreen()
	{
		FNativeFunctionRegistrar::RegisterFunction(AMyScreen::StaticClass(), "IsActive",(Native)&AMyScreen::execIsActive);
		FNativeFunctionRegistrar::RegisterFunction(AMyScreen::StaticClass(), "MoveHorizontally",(Native)&AMyScreen::execMoveHorizontally);
		FNativeFunctionRegistrar::RegisterFunction(AMyScreen::StaticClass(), "ResizeDown",(Native)&AMyScreen::execResizeDown);
		FNativeFunctionRegistrar::RegisterFunction(AMyScreen::StaticClass(), "ResizeUp",(Native)&AMyScreen::execResizeUp);
		FNativeFunctionRegistrar::RegisterFunction(AMyScreen::StaticClass(), "ScaleY",(Native)&AMyScreen::execScaleY);
		FNativeFunctionRegistrar::RegisterFunction(AMyScreen::StaticClass(), "SetActive",(Native)&AMyScreen::execSetActive);
		FNativeFunctionRegistrar::RegisterFunction(AMyScreen::StaticClass(), "SetLocationOnCylinder",(Native)&AMyScreen::execSetLocationOnCylinder);
		FNativeFunctionRegistrar::RegisterFunction(AMyScreen::StaticClass(), "UpdateVideoFrame",(Native)&AMyScreen::execUpdateVideoFrame);
	}
	IMPLEMENT_CLASS(AMyScreen, 1807223939);
	void AProcessPickup::StaticRegisterNativesAProcessPickup()
	{
		FNativeFunctionRegistrar::RegisterFunction(AProcessPickup::StaticClass(), "IsActive",(Native)&AProcessPickup::execIsActive);
		FNativeFunctionRegistrar::RegisterFunction(AProcessPickup::StaticClass(), "SetActive",(Native)&AProcessPickup::execSetActive);
	}
	IMPLEMENT_CLASS(AProcessPickup, 4068887088);
	void AScreenManager::StaticRegisterNativesAScreenManager()
	{
		FNativeFunctionRegistrar::RegisterFunction(AScreenManager::StaticClass(), "init",(Native)&AScreenManager::execinit);
	}
	IMPLEMENT_CLASS(AScreenManager, 4149245751);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FColor();
	ENGINE_API class UClass* Z_Construct_UClass_UTexture2D_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector();
	ENGINE_API class UClass* Z_Construct_UClass_UStaticMeshComponent_NoRegister();

	E4FI_API class UFunction* Z_Construct_UFunction_AMyScreen_IsActive();
	E4FI_API class UFunction* Z_Construct_UFunction_AMyScreen_MoveHorizontally();
	E4FI_API class UFunction* Z_Construct_UFunction_AMyScreen_ResizeDown();
	E4FI_API class UFunction* Z_Construct_UFunction_AMyScreen_ResizeUp();
	E4FI_API class UFunction* Z_Construct_UFunction_AMyScreen_ScaleY();
	E4FI_API class UFunction* Z_Construct_UFunction_AMyScreen_SetActive();
	E4FI_API class UFunction* Z_Construct_UFunction_AMyScreen_SetLocationOnCylinder();
	E4FI_API class UFunction* Z_Construct_UFunction_AMyScreen_UpdateVideoFrame();
	E4FI_API class UClass* Z_Construct_UClass_AMyScreen_NoRegister();
	E4FI_API class UClass* Z_Construct_UClass_AMyScreen();
	E4FI_API class UFunction* Z_Construct_UFunction_AProcessPickup_IsActive();
	E4FI_API class UFunction* Z_Construct_UFunction_AProcessPickup_SetActive();
	E4FI_API class UClass* Z_Construct_UClass_AProcessPickup_NoRegister();
	E4FI_API class UClass* Z_Construct_UClass_AProcessPickup();
	E4FI_API class UFunction* Z_Construct_UFunction_AScreenManager_init();
	E4FI_API class UClass* Z_Construct_UClass_AScreenManager_NoRegister();
	E4FI_API class UClass* Z_Construct_UClass_AScreenManager();
	E4FI_API class UPackage* Z_Construct_UPackage__Script_E4FI();
	UFunction* Z_Construct_UFunction_AMyScreen_IsActive()
	{
		struct MyScreen_eventIsActive_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AMyScreen();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsActive"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(MyScreen_eventIsActive_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, MyScreen_eventIsActive_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, MyScreen_eventIsActive_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, MyScreen_eventIsActive_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("MyScreen"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("MyScreen.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AMyScreen_MoveHorizontally()
	{
		UObject* Outer=Z_Construct_UClass_AMyScreen();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MoveHorizontally"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("MyScreen"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("MyScreen.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AMyScreen_ResizeDown()
	{
		UObject* Outer=Z_Construct_UClass_AMyScreen();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ResizeDown"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("MyScreen"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("MyScreen.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AMyScreen_ResizeUp()
	{
		UObject* Outer=Z_Construct_UClass_AMyScreen();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ResizeUp"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("MyScreen"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("MyScreen.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AMyScreen_ScaleY()
	{
		struct MyScreen_eventScaleY_Parms
		{
			float value;
		};
		UObject* Outer=Z_Construct_UClass_AMyScreen();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ScaleY"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(MyScreen_eventScaleY_Parms));
			UProperty* NewProp_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(value, MyScreen_eventScaleY_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("MyScreen"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("MyScreen.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AMyScreen_SetActive()
	{
		struct MyScreen_eventSetActive_Parms
		{
			bool NewMyScreenState;
		};
		UObject* Outer=Z_Construct_UClass_AMyScreen();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetActive"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(MyScreen_eventSetActive_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(NewMyScreenState, MyScreen_eventSetActive_Parms, bool);
			UProperty* NewProp_NewMyScreenState = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NewMyScreenState"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(NewMyScreenState, MyScreen_eventSetActive_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(NewMyScreenState, MyScreen_eventSetActive_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("MyScreen"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("MyScreen.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AMyScreen_SetLocationOnCylinder()
	{
		UObject* Outer=Z_Construct_UClass_AMyScreen();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetLocationOnCylinder"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("MyScreen"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("MyScreen.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AMyScreen_UpdateVideoFrame()
	{
		UObject* Outer=Z_Construct_UClass_AMyScreen();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UpdateVideoFrame"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04080401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AugmentedReality"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("MyScreen.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AMyScreen_NoRegister()
	{
		return AMyScreen::StaticClass();
	}
	UClass* Z_Construct_UClass_AMyScreen()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_E4FI();
			OuterClass = AMyScreen::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_AMyScreen_IsActive());
				OuterClass->LinkChild(Z_Construct_UFunction_AMyScreen_MoveHorizontally());
				OuterClass->LinkChild(Z_Construct_UFunction_AMyScreen_ResizeDown());
				OuterClass->LinkChild(Z_Construct_UFunction_AMyScreen_ResizeUp());
				OuterClass->LinkChild(Z_Construct_UFunction_AMyScreen_ScaleY());
				OuterClass->LinkChild(Z_Construct_UFunction_AMyScreen_SetActive());
				OuterClass->LinkChild(Z_Construct_UFunction_AMyScreen_SetLocationOnCylinder());
				OuterClass->LinkChild(Z_Construct_UFunction_AMyScreen_UpdateVideoFrame());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_VideoFrameData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("VideoFrameData"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(VideoFrameData, AMyScreen), 0x0020080000000000);
				UProperty* NewProp_VideoFrameData_Inner = new(EC_InternalUseOnlyConstructor, NewProp_VideoFrameData, TEXT("VideoFrameData"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FColor());
				UProperty* NewProp_VideoTexture = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("VideoTexture"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(VideoTexture, AMyScreen), 0x0020080000020015, Z_Construct_UClass_UTexture2D_NoRegister());
				UProperty* NewProp_test = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("test"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(test, AMyScreen), 0x0010000000020015, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_VideoSurfaceMesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("VideoSurfaceMesh"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(VideoSurfaceMesh, AMyScreen), 0x00100000000b001d, Z_Construct_UClass_UStaticMeshComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AMyScreen_IsActive(), "IsActive"); // 184678163
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AMyScreen_MoveHorizontally(), "MoveHorizontally"); // 778423712
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AMyScreen_ResizeDown(), "ResizeDown"); // 4180788765
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AMyScreen_ResizeUp(), "ResizeUp"); // 3657432082
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AMyScreen_ScaleY(), "ScaleY"); // 3493616444
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AMyScreen_SetActive(), "SetActive"); // 4149267373
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AMyScreen_SetLocationOnCylinder(), "SetLocationOnCylinder"); // 4234740757
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AMyScreen_UpdateVideoFrame(), "UpdateVideoFrame"); // 156523335
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MyScreen.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("MyScreen.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
				MetaData->SetValue(NewProp_VideoFrameData, TEXT("ModuleRelativePath"), TEXT("MyScreen.h"));
				MetaData->SetValue(NewProp_VideoTexture, TEXT("Category"), TEXT("AugmentedReality"));
				MetaData->SetValue(NewProp_VideoTexture, TEXT("ModuleRelativePath"), TEXT("MyScreen.h"));
				MetaData->SetValue(NewProp_test, TEXT("Category"), TEXT("AugmentedReality"));
				MetaData->SetValue(NewProp_test, TEXT("ModuleRelativePath"), TEXT("MyScreen.h"));
				MetaData->SetValue(NewProp_VideoSurfaceMesh, TEXT("Category"), TEXT("AugmentedReality"));
				MetaData->SetValue(NewProp_VideoSurfaceMesh, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_VideoSurfaceMesh, TEXT("ModuleRelativePath"), TEXT("MyScreen.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AMyScreen(Z_Construct_UClass_AMyScreen, &AMyScreen::StaticClass, TEXT("AMyScreen"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AMyScreen);
	UFunction* Z_Construct_UFunction_AProcessPickup_IsActive()
	{
		struct ProcessPickup_eventIsActive_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AProcessPickup();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsActive"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(ProcessPickup_eventIsActive_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, ProcessPickup_eventIsActive_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, ProcessPickup_eventIsActive_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, ProcessPickup_eventIsActive_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("ProcessPickup"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("ProcessPickup.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AProcessPickup_SetActive()
	{
		struct ProcessPickup_eventSetActive_Parms
		{
			bool newPickupState;
		};
		UObject* Outer=Z_Construct_UClass_AProcessPickup();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetActive"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(ProcessPickup_eventSetActive_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(newPickupState, ProcessPickup_eventSetActive_Parms, bool);
			UProperty* NewProp_newPickupState = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("newPickupState"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(newPickupState, ProcessPickup_eventSetActive_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(newPickupState, ProcessPickup_eventSetActive_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("ProcessPickup"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("ProcessPickup.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AProcessPickup_NoRegister()
	{
		return AProcessPickup::StaticClass();
	}
	UClass* Z_Construct_UClass_AProcessPickup()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_E4FI();
			OuterClass = AProcessPickup::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_AProcessPickup_IsActive());
				OuterClass->LinkChild(Z_Construct_UFunction_AProcessPickup_SetActive());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ProcessPickupMesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ProcessPickupMesh"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ProcessPickupMesh, AProcessPickup), 0x00400000000a001d, Z_Construct_UClass_UStaticMeshComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AProcessPickup_IsActive(), "IsActive"); // 836277844
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AProcessPickup_SetActive(), "SetActive"); // 428383246
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ProcessPickup.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("ProcessPickup.h"));
				MetaData->SetValue(NewProp_ProcessPickupMesh, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_ProcessPickupMesh, TEXT("Category"), TEXT("ProcessPickup"));
				MetaData->SetValue(NewProp_ProcessPickupMesh, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_ProcessPickupMesh, TEXT("ModuleRelativePath"), TEXT("ProcessPickup.h"));
				MetaData->SetValue(NewProp_ProcessPickupMesh, TEXT("ToolTip"), TEXT("Static Mesh"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AProcessPickup(Z_Construct_UClass_AProcessPickup, &AProcessPickup::StaticClass, TEXT("AProcessPickup"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AProcessPickup);
	UFunction* Z_Construct_UFunction_AScreenManager_init()
	{
		struct ScreenManager_eventinit_Parms
		{
			int32 nbScreen;
		};
		UObject* Outer=Z_Construct_UClass_AScreenManager();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("init"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(ScreenManager_eventinit_Parms));
			UProperty* NewProp_nbScreen = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("nbScreen"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(nbScreen, ScreenManager_eventinit_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("ScreenManager"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("ScreenManager.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AScreenManager_NoRegister()
	{
		return AScreenManager::StaticClass();
	}
	UClass* Z_Construct_UClass_AScreenManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_E4FI();
			OuterClass = AScreenManager::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_AScreenManager_init());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AScreenManager_init(), "init"); // 232189020
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ScreenManager.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("ScreenManager.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AScreenManager(Z_Construct_UClass_AScreenManager, &AScreenManager::StaticClass, TEXT("AScreenManager"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AScreenManager);
	UPackage* Z_Construct_UPackage__Script_E4FI()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/E4FI")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x67779B14;
			Guid.B = 0x7ED030BD;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
